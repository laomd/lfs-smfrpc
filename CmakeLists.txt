cmake_minimum_required(VERSION 3.11)
project(lao_hdfs VERSION 0.1)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/cmake)
set(CMAKE_CXX_STANDARD 17)
set(ENV{PKG_CONFIG_PATH} "$PKG_CONFIG_PATH:/usr/local/lib64/pkgconfig")
ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)

find_package(PkgConfig REQUIRED)
find_package(Protobuf REQUIRED)
find_package(Boost COMPONENTS log REQUIRED)
find_package(Glog REQUIRED)
pkg_search_module(SEASTAR REQUIRED seastar)

include_directories(${PROJECT_SOURCE_DIR})
include_directories(${CMAKE_BINARY_DIR})
include_directories(${SEASTAR_STATIC_INCLUDE_DIRS})
include_directories(${PROTOBUF_INCLUDE_DIRS})
include_directories(BEFORE ${GLOG_INCLUDE_DIRS}) 
link_libraries(${SEASTAR_STATIC_LDFLAGS})
link_libraries(${PROTOBUF_LIBRARIES})
link_libraries(glog gflags)
link_libraries(${Boost_LOG_LIBRARY})
add_compile_options(${SEASTAR_STATIC_CFLAGS_OTHER})

macro(PROTOBUF_GENERATE_CPP2 dir)
    set(PROTO_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${dir})
    set(PROTO_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/${dir})
    file(MAKE_DIRECTORY ${PROTO_OUT_DIR})

    file(GLOB PROTO_LIST ${PROTO_PATH}/*.proto)
    foreach(proto ${PROTO_LIST})
        execute_process(COMMAND ${PROTOBUF_PROTOC_EXECUTABLE} --proto_path=${PROTO_PATH} --cpp_out=${PROTO_OUT_DIR} ${proto})
    endforeach(proto)

    file(GLOB PROTO_SRCS ${PROTO_OUT_DIR}/*.cc)
endmacro(PROTOBUF_GENERATE_CPP2)

function(add_tests TEST_SRCS)
    foreach(test_case ${TEST_SRCS})
        get_filename_component(barename ${test_case} NAME)
        string(REGEX REPLACE "\\.[^.]*$" "" target_name ${barename})
        add_executable(${target_name} ${barename})
        add_test(NAME ${target_name} COMMAND ${target_name})
    endforeach(test_case)
endfunction(add_tests)

enable_testing ()
add_subdirectory (echo_service)
add_subdirectory (lao_rpc)
